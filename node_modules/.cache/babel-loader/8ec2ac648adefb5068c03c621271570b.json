{"remainingRequest":"/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/node_modules/babel-loader/lib/index.js!/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/node_modules/eslint-loader/index.js??ref--13-0!/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/src/store/modules/todos.js","dependencies":[{"path":"/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/src/store/modules/todos.js","mtime":1568621507580},{"path":"/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { stat } from 'fs';\nvar state = {\n  todos: [{\n    id: 1,\n    title: 'Todo One'\n  }, {\n    id: 2,\n    title: 'Todo Two'\n  }]\n};\nvar getters = {\n  allTodos: function allTodos(state) {\n    return state.todos;\n  }\n};\nvar actions = {\n  fetchTodos: function () {\n    var _fetchTodos = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get('https://jsonplaceholder.typicode.com/todos');\n\n            case 3:\n              response = _context.sent;\n              commit('setTodos', response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function fetchTodos(_x) {\n      return _fetchTodos.apply(this, arguments);\n    }\n\n    return fetchTodos;\n  }(),\n  addTodo: function () {\n    var _addTodo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2, title) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return axios.post('https://jsonplaceholder.typicode.com/todos', {\n                title: title,\n                completed: false\n              });\n\n            case 3:\n              response = _context2.sent;\n              commit('newTodo', response.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function addTodo(_x2, _x3) {\n      return _addTodo.apply(this, arguments);\n    }\n\n    return addTodo;\n  }(),\n  deleteTodo: function () {\n    var _deleteTodo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref3, id) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return axios.delete(\"https://jsonplaceholder.typicode.com/todos/\".concat(id));\n\n            case 3:\n              commit('removeTodo', id);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function deleteTodo(_x4, _x5) {\n      return _deleteTodo.apply(this, arguments);\n    }\n\n    return deleteTodo;\n  }(),\n  filterTodos: function () {\n    var _filterTodos = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(_ref4, e) {\n      var commit, limit, response;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              limit = parseInt(e.target.options[e.target.options.selectedIndex].innerText);\n              _context4.next = 4;\n              return axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=\".concat(limit));\n\n            case 4:\n              response = _context4.sent;\n              commit(\"setTodos\", response.data);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function filterTodos(_x6, _x7) {\n      return _filterTodos.apply(this, arguments);\n    }\n\n    return filterTodos;\n  }(),\n  updateTodo: function () {\n    var _updateTodo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(_ref5, updTodo) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return axios.put(\"https://jsonplaceholder.typicode.com/todos/\".concat(updTodo.id), updTodo);\n\n            case 3:\n              response = _context5.sent;\n              console.log(response.data);\n              commit('updateTodo', response.data);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function updateTodo(_x8, _x9) {\n      return _updateTodo.apply(this, arguments);\n    }\n\n    return updateTodo;\n  }()\n};\nvar mutations = {\n  setTodos: function setTodos(state, todos) {\n    return state.todos = todos;\n  },\n  newTodo: function newTodo(state, todo) {\n    return state.todos.unshift(todo);\n  },\n  removeTodo: function removeTodo(state, id) {\n    return state.todos = state.todos.filter(function (todo) {\n      return todo.id !== id;\n    });\n  },\n  updateTodo: function updateTodo(state, updTodo) {\n    var index = state.todos.findIndex(function (todo) {\n      return todo.id === updTodo.id;\n    });\n\n    if (index !== -1) {\n      state.todos.splice(index, 1, updTodo);\n    }\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/src/store/modules/todos.js"],"names":["axios","stat","state","todos","id","title","getters","allTodos","actions","fetchTodos","commit","get","response","data","addTodo","post","completed","deleteTodo","delete","filterTodos","e","limit","parseInt","target","options","selectedIndex","innerText","updateTodo","updTodo","put","console","log","mutations","setTodos","newTodo","todo","unshift","removeTodo","filter","index","findIndex","splice"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { stat } from 'fs';\n\nconst state = {\n    todos: [\n        {\n            id: 1,\n            title: 'Todo One'\n        },\n        {\n            id: 2,\n            title: 'Todo Two'\n        },\n\n    ]\n};\n\n\nconst getters = {\n    allTodos: state => state.todos\n};\n\nconst actions = {\n    async fetchTodos({ commit }){\n        const response = await axios.get('https://jsonplaceholder.typicode.com/todos');\n        commit('setTodos', response.data);\n    },\n    async addTodo( { commit }, title){\n        const response = await axios.post('https://jsonplaceholder.typicode.com/todos', { title, completed: false });\n        commit('newTodo', response.data);\n    },\n    async deleteTodo( {commit }, id) {\n        await axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`);\n\n        commit('removeTodo', id);\n    },\n    async filterTodos( {commit }, e ){\n        const limit = parseInt(e.target.options[e.target.options.selectedIndex].innerText);\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/todos?_limit=${limit}`);\n        commit(\"setTodos\", response.data);\n\n    },\n    async updateTodo({commit}, updTodo){\n        const response = await axios.put(`https://jsonplaceholder.typicode.com/todos/${updTodo.id}`, updTodo);\n        console.log(response.data);\n        commit('updateTodo', response.data);\n    }\n\n};\n\nconst mutations = {\n    setTodos: (state, todos) => (state.todos = todos),\n    newTodo: (state, todo) => state.todos.unshift(todo),\n    removeTodo: (state, id) => state.todos = state.todos.filter(todo => todo.id !== id),\n    updateTodo: (state, updTodo) => {\n        const index = state.todos.findIndex(todo => todo.id === updTodo.id);\n        if(index !== -1){\n            state.todos.splice(index, 1, updTodo);\n        }\n    }\n};\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n};"]}]}