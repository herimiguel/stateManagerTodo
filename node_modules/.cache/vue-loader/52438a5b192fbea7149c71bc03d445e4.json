{"remainingRequest":"/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/src/components/Todos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/src/components/Todos.vue","mtime":1568621682880},{"path":"/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/heribertomiguel/Documents/websites/laravel/vueProjects/vuex_todo_manager/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default {\n    name: \"Todos\",\n    methods: {\n      ...mapActions(['fetchTodos', \"deleteTodo\", \"updateTodo\"]),\n      onDblClick(todo){\n        const updTodo = {\n          id: todo.id,\n          title: todo.title,\n          completed: !todo.completed\n        }\n        this.updateTodo(updTodo);\n      }\n    },\n\n    computed: mapGetters(['allTodos']),\n    \n    created(){\n      this.fetchTodos();\n    },\n};\n",{"version":3,"sources":["Todos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"Todos.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  \n  <div>\n<h3>TODOS</h3>\n<div class=\"legend\">\n <span>Double click to mark as complete</span>\n <span>\n <span class=\"incomplete-box\"> </span>= incomplete \n</span> \n <span>\n <span class=\"complete-box\">   </span>= complete\n</span> \n</div>\n<div class=\"todos\">\n    <div @dblclick=\"onDblClick(todo)\" v-for=\"todo in allTodos\" :key=\"todo.id\" class=\"todo\" v-bind:class=\"{'is-complete':todo.completed}\" > {{ todo.title }}\n      <i @click=\"deleteTodo(todo.id)\" class=\"fas fa-trash-alt\" > </i>\n    </div>\n</div>\n  </div>\n\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default {\n    name: \"Todos\",\n    methods: {\n      ...mapActions(['fetchTodos', \"deleteTodo\", \"updateTodo\"]),\n      onDblClick(todo){\n        const updTodo = {\n          id: todo.id,\n          title: todo.title,\n          completed: !todo.completed\n        }\n        this.updateTodo(updTodo);\n      }\n    },\n\n    computed: mapGetters(['allTodos']),\n    \n    created(){\n      this.fetchTodos();\n    },\n};\n</script>\n\n<style scoped>\n  .todos {\n    display: grid;\n    grid-template-columns:repeate(3, 1fr);\n    grid-gap: 1rem;\n  }\n  .todo {\n    border: 1px solid #ccc;\n    background: #41b883;\n    padding: 1rem;\n    border-radius: 5px;\n    text-align: center;\n    position: relative;\n    cursor: pointer;\n  }\n  i {\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n    color: #fff;\n    cursor: pointer;\n  }\n  .legend {\n    display: flex;\n    justify-content: space-around;\n    margin-bottom: 1rem;\n  }\n  .complete-box{\n    display: inline-block;\n    width: 10px;\n    height: 10px;\n    background: #35495e;\n\n  }\n    .incomplete-box{\n    display: inline-block;\n    width: 10px;\n    height: 10px;\n    background: #41b883;\n    \n  }\n  .is-complete {\n    background: #35495e;\n    color:#fff;\n  }\n\n  @media (max-width: 500px){\n    .todos{\n      grid-template-columns: 1fr; \n    }\n  }\n\n\n</style>\n"]}]}